{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-global/","result":{"data":{"site":{"siteMetadata":{"title":"Fei"}},"markdownRemark":{"id":"234d5d3a-d3fb-5f57-be19-d5ad1e9e8330","excerpt":"在 JavaScript…","html":"<p>在 JavaScript 中，所有不属于任何其它对象的属性或方法，都是<code class=\"language-text\">Global</code>对象的属性或方法。也就是说，没有真正意义上的全局变量或函数，所有在全局作用域中定义的变量或函数都是<code class=\"language-text\">Global</code>对象的属性或方法。这也是为什么在全局作用域中，不使用<code class=\"language-text\">var</code>关键字声明的变量能通过<code class=\"language-text\">delete</code>操作符删除，而使用<code class=\"language-text\">var</code>关键字声明的变量则不可以。因为对<code class=\"language-text\">Global</code>对象来说，前者是属性，而后者则不是。</p>\n<p><code class=\"language-text\">Global</code>对象的另一个特点是无法直接引用。尽管所有浏览器都将<code class=\"language-text\">Global</code>对象作为<code class=\"language-text\">window</code>对象的一部分加以实现，但<code class=\"language-text\">window</code>对象本身还具有许多浏览器对象模型独有的属性和方法。《JavaScript 高级程序设计》第三版中通过如下方式取得对<code class=\"language-text\">Global</code>对象的引用：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Page 134</span>\n<span class=\"token keyword\">var</span> global <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>但在严格模式下，<code class=\"language-text\">this</code>值等于<code class=\"language-text\">undefined</code>。那么如何确保始终正确引用<code class=\"language-text\">Global</code>对象？</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'use strict'</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">global</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">global</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'use strict'</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>显然，不管是在支持严格模式的浏览器下，还是在不支持严格模式的浏览器下，始终将<code class=\"language-text\">this</code>值作为参数传递给立即执行函数能够确保正确引用<code class=\"language-text\">global</code>对象。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> global <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">global</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'use strict'</span>\n  <span class=\"token keyword\">return</span> global\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"JavaScript中引用Global对象","date":"2015-09-22","description":"如何做到在任何情况下都能取得对全局对象的引用？"}}},"pageContext":{"slug":"/javascript-global/","previous":{"fields":{"slug":"/javascript-apply-bind/"},"frontmatter":{"title":"JavaScript中apply和bind的关系"}},"next":null}},"staticQueryHashes":["2841359383","4265873673"]}