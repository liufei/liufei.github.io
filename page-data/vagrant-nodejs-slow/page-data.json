{"componentChunkName":"component---src-templates-blog-post-js","path":"/vagrant-nodejs-slow/","result":{"data":{"site":{"siteMetadata":{"title":"Fei"}},"markdownRemark":{"id":"46887b0b-a913-5e8e-b505-27d7f432c115","excerpt":"缘起 第一个项目基于 Node.js 和 Express，开发环境 Windows 系统。尽管使用的参数解决了不少依赖包的安装问题，但依然有一些依赖包无法正常安装。无奈之下，转而采用 VirtualBox 虚拟机内安装 Ubuntu 的方式。但这依然要做很多配置才能实现开发文件夹自动同步，以及通过 ip…","html":"<h2>缘起</h2>\n<p>第一个项目基于 Node.js 和 Express，开发环境 Windows 系统。尽管使用<code class=\"language-text\">npm</code>的<code class=\"language-text\">--no-bin-links</code>参数解决了不少依赖包的安装问题，但依然有一些依赖包无法正常安装。无奈之下，转而采用 VirtualBox 虚拟机内安装 Ubuntu 的方式。但这依然要做很多配置才能实现开发文件夹自动同步，以及通过 ip 直接从 Host 端访问 Guest 端运行的服务。偶然的机会，在 V2EX 发现有人提及 Vagrant，从此踏上不归路。似乎到这里，就应该一切圆满，从此过上自在的日子？不，一切才刚刚开始。</p>\n<h2>双向同步</h2>\n<p>Vagrant 默认使用 VirtualBox 自带的文件同步方式。这种方式的好处是不用配置，坏处是文件数量不能多。随着文件数量的增加，磁盘 IO 性能逐渐下降。当共享文件夹内文件数量达到 1000+时，相对于本地运行服务，跑在虚拟机中的程序可能要延迟 5 秒到 5 分钟不等。想想前端开发每天要刷新多少次页面，这简直无法忍受！</p>\n<p>解决办法是换用其它文件同步方式，比如 NFS 和 SMB。其中，Mac 平台下使用 NFS，Windows 平台下使用 SMB。</p>\n<p>使用 NFS 有两个限制，一是必须在<code class=\"language-text\">Vagrantfile</code>中配置<code class=\"language-text\">private network</code>，二是必须在每次启动虚拟机时输入管理员密码。不过后者可以通过修改系统配置来解决，需要熟悉 Shell 命令。具体配置方式在官方文档中有详细介绍：<a href=\"https://docs.vagrantup.com/v2/synced-folders/nfs.html\">Vagrant NFS</a>。</p>\n<p>同样的，使用 SMB 也有限制，那就是每次需要使用管理员方式打开命令行，而后再执行相应的<code class=\"language-text\">Vagrant</code>命令。具体配置方式在官方文档中有详细介绍：<a href=\"https://docs.vagrantup.com/v2/synced-folders/smb.html\">Vagrant SMB</a>。</p>\n<h3>配置文件</h3>\n<p>以下为我的<code class=\"language-text\">Vagrantfile</code>配置文件内容，在<code class=\"language-text\">OS X 10.9.5</code>，<code class=\"language-text\">Vagrant 1.7.4</code>，<code class=\"language-text\">VirtualBox 4.3.30</code>下测试通过。其中<code class=\"language-text\">trusty-server-cloudimg-amd64-vagrant-disk1.box</code>为 Ubuntu 官方镜像，保存在<code class=\"language-text\">~/Downloads</code>目录；<code class=\"language-text\">sources.list</code>为<code class=\"language-text\">Ubuntu 14.04</code>的源列表文件，和<code class=\"language-text\">Vagrantfile</code>同目录。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># -*- mode: ruby -*-</span>\n<span class=\"token comment\"># vi: set ft=ruby :</span>\n\n<span class=\"token comment\"># Vagrantfile API/syntax version. Don't touch unless you know what you're doing!</span>\nVAGRANTFILE_API_VERSION <span class=\"token operator\">=</span> <span class=\"token string\">\"2\"</span>\n\nurl      <span class=\"token operator\">=</span> <span class=\"token string\">'~/Downloads/trusty-server-cloudimg-amd64-vagrant-disk1.box'</span>\nbox      <span class=\"token operator\">=</span> <span class=\"token string\">'ubuntu/trusty64'</span>\n<span class=\"token function\">hostname</span> <span class=\"token operator\">=</span> <span class=\"token string\">'trusty'</span>\n<span class=\"token function\">ram</span>      <span class=\"token operator\">=</span> <span class=\"token string\">'1024'</span>\ncpu      <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span>\n\n<span class=\"token variable\">$script</span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">SCRIPT\necho custom configuration start...  http://biped.me\ncp /vagrant/sources.list /etc/apt/\napt-get update\napt-get upgrade -y\napt-get autoremove -y\nSCRIPT</span>\n\nVagrant.configure<span class=\"token punctuation\">(</span>VAGRANTFILE_API_VERSION<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>config<span class=\"token operator\">|</span>\n  config.vm.box <span class=\"token operator\">=</span> box\n  config.vm.box_url <span class=\"token operator\">=</span> url\n  config.vm.hostname <span class=\"token operator\">=</span> <span class=\"token function\">hostname</span>\n  config.vm.network <span class=\"token string\">\"private_network\"</span>, ip: <span class=\"token string\">\"192.168.168.168\"</span>\n  config.vm.synced_folder <span class=\"token string\">\".\"</span>, <span class=\"token string\">\"/vagrant\"</span>,\n    :nfs <span class=\"token operator\">=</span><span class=\"token operator\">></span> true,\n    :mount_options <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token string\">'fsc'</span>, <span class=\"token string\">'actimeo=2'</span><span class=\"token punctuation\">]</span>\n\n  config.vm.provider <span class=\"token string\">\"virtualbox\"</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span><span class=\"token function\">v</span><span class=\"token operator\">|</span>\n    v.customize <span class=\"token punctuation\">[</span><span class=\"token string\">\"modifyvm\"</span>, :id, <span class=\"token string\">\"--natdnshostresolver1\"</span>, <span class=\"token string\">\"on\"</span><span class=\"token punctuation\">]</span>\n    v.customize <span class=\"token punctuation\">[</span><span class=\"token string\">\"modifyvm\"</span>, :id, <span class=\"token string\">\"--name\"</span>, hostname<span class=\"token punctuation\">]</span>\n    v.customize <span class=\"token punctuation\">[</span><span class=\"token string\">\"modifyvm\"</span>, :id, <span class=\"token string\">\"--ostype\"</span>, <span class=\"token string\">\"Ubuntu_64\"</span><span class=\"token punctuation\">]</span>\n    v.customize <span class=\"token punctuation\">[</span><span class=\"token string\">\"modifyvm\"</span>, :id, <span class=\"token string\">\"--memory\"</span>, ram<span class=\"token punctuation\">]</span>\n    v.customize <span class=\"token punctuation\">[</span><span class=\"token string\">\"modifyvm\"</span>, :id, <span class=\"token string\">\"--cpus\"</span>, cpu<span class=\"token punctuation\">]</span>\n  end\n\n  config.vm.provision <span class=\"token string\">\"shell\"</span>, inline: <span class=\"token variable\">$script</span>\nend</code></pre></div>\n<h2>单向同步</h2>\n<p>采用 NFS 或 SMB 方式同步后，在涉及到大量小文件双向同步时，速度有明显提升，但和本地运行程序相比，依然有一定差距。那么问题来了，能否再快一些？</p>\n<p>双向同步意味着 Host 端改动的文件会实时同步到 Guest 端，同样的，Guest 端改动的文件也会实时同步到 Host 端。这样一去一来，性能自然下降不少。如果说，只在 Host 端开发，然后自动将 Host 端改动的文件实时同步到 Guest 端运行，而不把 Guest 端自动生成的文件同步到 Host 端，岂不是就可以避免这个性能上的损耗？答案是肯定的，使用 RSync 方式可以在很大程度上提升速度。</p>\n<p>和使用 NFS 或 SMB 方式一样，使用 RSync 方式也有限制。如果想实现自动同步，就必须在虚拟机启动后，单开一个窗口用以运行 Vagrant 的自动同步服务，意即执行<code class=\"language-text\">vagrant rsync-auto</code>命令。</p>\n<p>这里有两个地方需要注意：</p>\n<p>一，默认情况下 Vagrant 会删除所有 Host 端不存在而 Guest 端存在的文件，也就是说默认情况下会在下一次同步时删除 Guest 端在此之前自动生成的文件。例如，在虚拟机启动后，完成第一次从 Host 端到 Guest 端的同步，而后在 Guest 端执行<code class=\"language-text\">bower install</code>命令和<code class=\"language-text\">npm install</code>命令，那么生成的<code class=\"language-text\">bower_components</code>目录和<code class=\"language-text\">node_modules</code>目录将会在下一次从 Host 端到 Guest 端的同步时被删除。想解决这个问题需要修改<code class=\"language-text\">rsync__args</code>选项，去掉<code class=\"language-text\">--delete</code>参数。</p>\n<p>二，并不是每个文件都需要从 Host 端同步到 Guest 端。例如，<code class=\"language-text\">.git</code>目录下所有 Git 相关文件就不需要实时同步。解决办法是在<code class=\"language-text\">rsync__exclude</code>选项中指定这些不需要从 Host 端同步到 Guest 端的文件。类似的，如果是在 Host 端执行<code class=\"language-text\">bower install</code>和<code class=\"language-text\">npm install</code>，那么生成的<code class=\"language-text\">bower_components</code>目录和<code class=\"language-text\">node_modules</code>目录也可以被排除在待同步内容之外。如此，瞬间少了大量小文件。记得在第一个基于 Node.js 的项目中，前前后后有将近一万多个小文件，其中大部分来自<code class=\"language-text\">node_modules</code>目录。将这个目录排除在外后，可想而知性能会有多大提升。</p>\n<h3>配置文件</h3>\n<p>配置说明见上文，默认前端开发在 Host 端进行，后台程序如 Django 在 Guest 端运行，前端开发过程中在 Host 端生成的文件不同步到 Guest 端。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># -*- mode: ruby -*-</span>\n<span class=\"token comment\"># vi: set ft=ruby :</span>\n\n<span class=\"token comment\"># Vagrantfile API/syntax version. Don't touch unless you know what you're doing!</span>\nVAGRANTFILE_API_VERSION <span class=\"token operator\">=</span> <span class=\"token string\">\"2\"</span>\n\nurl      <span class=\"token operator\">=</span> <span class=\"token string\">'~/Downloads/trusty-server-cloudimg-amd64-vagrant-disk1.box'</span>\nbox      <span class=\"token operator\">=</span> <span class=\"token string\">'ubuntu/trusty64'</span>\n<span class=\"token function\">hostname</span> <span class=\"token operator\">=</span> <span class=\"token string\">'trusty'</span>\n<span class=\"token function\">ram</span>      <span class=\"token operator\">=</span> <span class=\"token string\">'1024'</span>\ncpu      <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span>\n\n<span class=\"token variable\">$script</span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">SCRIPT\necho custom configuration start...  http://biped.me\ncp /vagrant/sources.list /etc/apt/\napt-get update\napt-get upgrade -y\napt-get autoremove -y\nSCRIPT</span>\n\nVagrant.configure<span class=\"token punctuation\">(</span>VAGRANTFILE_API_VERSION<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>config<span class=\"token operator\">|</span>\n  config.vm.box <span class=\"token operator\">=</span> box\n  config.vm.box_url <span class=\"token operator\">=</span> url\n  config.vm.hostname <span class=\"token operator\">=</span> <span class=\"token function\">hostname</span>\n  config.vm.network <span class=\"token string\">\"private_network\"</span>, ip: <span class=\"token string\">\"192.168.168.168\"</span>\n  config.vm.synced_folder <span class=\"token string\">\".\"</span>, <span class=\"token string\">\"/vagrant\"</span>, type: <span class=\"token string\">\"rsync\"</span>,\n    rsync__exclude: <span class=\"token punctuation\">[</span><span class=\"token string\">\"**/.git/\"</span>, <span class=\"token string\">\"**/bower_components/\"</span>, <span class=\"token string\">\"**/node_modules/\"</span><span class=\"token punctuation\">]</span>,\n    rsync__args: <span class=\"token punctuation\">[</span><span class=\"token string\">\"--verbose\"</span>, <span class=\"token string\">\"--archive\"</span>, <span class=\"token string\">\"-z\"</span>, <span class=\"token string\">\"--copy-links\"</span><span class=\"token punctuation\">]</span>\n\n  config.vm.provider <span class=\"token string\">\"virtualbox\"</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span><span class=\"token function\">v</span><span class=\"token operator\">|</span>\n    v.customize <span class=\"token punctuation\">[</span><span class=\"token string\">\"modifyvm\"</span>, :id, <span class=\"token string\">\"--natdnshostresolver1\"</span>, <span class=\"token string\">\"on\"</span><span class=\"token punctuation\">]</span>\n    v.customize <span class=\"token punctuation\">[</span><span class=\"token string\">\"modifyvm\"</span>, :id, <span class=\"token string\">\"--name\"</span>, hostname<span class=\"token punctuation\">]</span>\n    v.customize <span class=\"token punctuation\">[</span><span class=\"token string\">\"modifyvm\"</span>, :id, <span class=\"token string\">\"--ostype\"</span>, <span class=\"token string\">\"Ubuntu_64\"</span><span class=\"token punctuation\">]</span>\n    v.customize <span class=\"token punctuation\">[</span><span class=\"token string\">\"modifyvm\"</span>, :id, <span class=\"token string\">\"--memory\"</span>, ram<span class=\"token punctuation\">]</span>\n    v.customize <span class=\"token punctuation\">[</span><span class=\"token string\">\"modifyvm\"</span>, :id, <span class=\"token string\">\"--cpus\"</span>, cpu<span class=\"token punctuation\">]</span>\n  end\n\n  config.vm.provision <span class=\"token string\">\"shell\"</span>, inline: <span class=\"token variable\">$script</span>\nend</code></pre></div>","frontmatter":{"title":"Vagrant下Node.js程序缓慢问题","date":"2015-05-30","description":"基于 Vagrant 开发很方便，但是 Node.js 运行缓慢怎么办？"}}},"pageContext":{"slug":"/vagrant-nodejs-slow/","previous":{"fields":{"slug":"/migrate-from-ghost-to-hexo/"},"frontmatter":{"title":"从Ghost迁移到Hexo"}},"next":{"fields":{"slug":"/vagrant-connection-timeout/"},"frontmatter":{"title":"Vagrant连接超时"}}}},"staticQueryHashes":["2841359383","4265873673"]}