{"componentChunkName":"component---src-templates-blog-post-js","path":"/configure-git-vagrant/","result":{"data":{"site":{"siteMetadata":{"title":"Fei"}},"markdownRemark":{"id":"ece84d13-a512-579f-8abb-69c3cc48e49e","excerpt":"在 Windows 下调试 Node.js & Python 代码，总存在各种各样的问题。本文采用 Git, Vagrant, VirtualBox 等工具搭建 Windows 下的统一开发环境。 准备工作 下载 Git 下载 Virtualbox 下载 Vagrant 下载 Box 安装 Git…","html":"<p>在 Windows 下调试 Node.js &#x26; Python 代码，总存在各种各样的问题。本文采用 Git, Vagrant, VirtualBox 等工具搭建 Windows 下的统一开发环境。</p>\n<h3>准备工作</h3>\n<ol>\n<li><a href=\"http://git-scm.com/download/win\">下载 Git</a></li>\n<li><a href=\"https://www.virtualbox.org/wiki/Downloads\">下载 Virtualbox</a></li>\n<li><a href=\"https://www.vagrantup.com/downloads.html\">下载 Vagrant</a></li>\n<li><a href=\"https://cloud-images.ubuntu.com/vagrant/precise/current/precise-server-cloudimg-amd64-vagrant-disk1.box\">下载 Box</a></li>\n</ol>\n<h3>安装 Git</h3>\n<ol>\n<li>在 <code class=\"language-text\">Select Components</code> 页面勾选 <code class=\"language-text\">Use a TrueType font in all console windows(not only for Git Bash)</code></li>\n<li>在 <code class=\"language-text\">Adjusting your PATH environment</code> 页面勾选 <code class=\"language-text\">Use Git and optional Unix tools from the Windows Command Prompt</code></li>\n</ol>\n<h3>安装 Virtualbox &#x26; Vagrant</h3>\n<p>安装完 Virtualbox 之后，再安装 Vagrant</p>\n<h3>配置 Ubuntu 12.04 64bit</h3>\n<p>假设下载后的 Box 文件保存在 <code class=\"language-text\">C:\\Users\\biped\\Downloads</code> 目录，代码保存在 <code class=\"language-text\">C:\\Users\\biped\\Work</code> 目录。首先添加 Box 文件，并将其命名为 <code class=\"language-text\">precise64</code> 方便下次使用。而后初始化系统，安装 <code class=\"language-text\">vagrant-vbguest</code> 插件使 Virtualbox Guest Addition 保持最新。在一切完成后，启动 Ubuntu 12.04 64bit 系统。</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">cd .\\Work\nvagrant box add precise64 C:\\Users\\biped\\Downloads\\precise64.box\nvagrant init precise64\nvagrant plugin install vagrant-vbguest\nvagrant up</code></pre></div>\n<p>配置 Vagrantfile 文件，去除 <code class=\"language-text\">config.vm.network &quot;public_network&quot;</code> 前的 <code class=\"language-text\">#</code> 号，使局域网内其它用户能够访问，并且本机能够直接调试。在更改完配置文件后，输入以下命令。</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">vagrant reload --provision</code></pre></div>\n<p>现在输入 <code class=\"language-text\">vagrant ssh</code> 即可登录 Ubuntu 12.04 64bit 系统，其它操作与正常安装版本一致。如果其它局域网用户想访问该虚拟机，直接输入 <code class=\"language-text\">ssh vagrant@192.168.1.123</code> 即可，默认密码 <code class=\"language-text\">vagrant</code>。其中 <code class=\"language-text\">192.168.1.123</code> 为虚拟机 IP 地址， Ubuntu 下输入 <code class=\"language-text\">ifconfig</code> 查看。</p>\n<p>至此，开发环境搭建完成。虚拟机下 <code class=\"language-text\">/vagrant/</code> 目录与本机 <code class=\"language-text\">C:\\Users\\biped\\Work</code> 目录自动同步，直接编辑本机 <code class=\"language-text\">C:\\Users\\biped\\Work</code> 目录下的文件即可。</p>\n<h3>常用 Vagrant 命令</h3>\n<p>启动虚拟机\n<code class=\"language-text\">vagrant up</code></p>\n<p>关闭虚拟机\n<code class=\"language-text\">vagrant halt</code></p>\n<p>重启虚拟机\n<code class=\"language-text\">vagrant reload</code></p>\n<p>虚拟机休眠\n<code class=\"language-text\">vagrant suspend</code></p>\n<p>以 SSH 方式登录虚拟机\n<code class=\"language-text\">vagrant ssh</code></p>\n<p>重启虚拟机及其网络服务\n<code class=\"language-text\">vagrant reload --provision</code></p>","frontmatter":{"title":"开发环境配置","date":"2014-07-15","description":"在 Windows 下调试 Node.js & Python 代码，总存在各种各样的问题。本文采用 Git, Vagrant, VirtualBox 等工具搭建 Windows 下的统一开发环境。"}}},"pageContext":{"slug":"/configure-git-vagrant/","previous":{"fields":{"slug":"/configure-sublime-text-3/"},"frontmatter":{"title":"调教 Sublime Text 3"}},"next":{"fields":{"slug":"/echarts-gauge-negative-value/"},"frontmatter":{"title":"ECharts仪表盘正负值"}}}},"staticQueryHashes":["2841359383","4265873673"]}